"use strict";(self.webpackChunkHRnet_doc=self.webpackChunkHRnet_doc||[]).push([[160],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=d(n),c=i,k=u["".concat(p,".").concat(c)]||u[c]||m[c]||l;return n?a.createElement(k,r(r({ref:t},s),{},{components:n})):a.createElement(k,r({ref:t},s))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:i,r[1]=o;for(var d=2;d<l;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6721:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var a=n(7462),i=(n(7294),n(3905));const l={sidebar_position:1},r="Utilisation",o={unversionedId:"datatable-doc/utilisation",id:"datatable-doc/utilisation",title:"Utilisation",description:"Utilisation du composant DataTable",source:"@site/docs/datatable-doc/utilisation.md",sourceDirName:"datatable-doc",slug:"/datatable-doc/utilisation",permalink:"/HRnet-doc/docs/datatable-doc/utilisation",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Le composant DataTable",permalink:"/HRnet-doc/docs/category/le-composant-datatable"},next:{title:"Le Code",permalink:"/HRnet-doc/docs/datatable-doc/code"}},p={},d=[{value:"Utilisation du composant <code>DataTable</code>",id:"utilisation-du-composant-datatable",level:2},{value:"Le mod\xe8le",id:"le-mod\xe8le",level:2},{value:"Le champ <code>headers</code>",id:"le-champ-headers",level:3},{value:"Le champ <code>data</code>",id:"le-champ-data",level:3}],s={toc:d},u="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"utilisation"},"Utilisation"),(0,i.kt)("h2",{id:"utilisation-du-composant-datatable"},"Utilisation du composant ",(0,i.kt)("inlineCode",{parentName:"h2"},"DataTable")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"DataTable")," est un composant ",(0,i.kt)("inlineCode",{parentName:"p"},"React")," n'utilisant aucune biblioth\xe8que tierce. Dans l'\xe9tat actuel de d\xe9veloppement, ",(0,i.kt)("inlineCode",{parentName:"p"},"DataTable")," permet:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"D'afficher des donn\xe9es JSON conformes \xe0 un certain mod\xe8le dans une table. Ce mod\xe8le \xe9tant la seule ",(0,i.kt)("em",{parentName:"li"},"prop")," ",(0,i.kt)("inlineCode",{parentName:"li"},"model")," pass\xe9e au composant."),(0,i.kt)("li",{parentName:"ul"},"Il y a la possibilit\xe9 de naviguer entre les diff\xe9rentes pages d'affichage des entr\xe9es, une barre de recherche permet une recherche dans la table correspondant aux crit\xe8res suivants :",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Plusieurs ",(0,i.kt)("em",{parentName:"li"},"mots")," s\xe9par\xe9s par un ou plusieurs espaces peuvent \xeatre entr\xe9s dans la barre de recherche. Une entr\xe9e correspond \xe0 un r\xe9sultat positif de recherche lorsque tous ces mots ont \xe9t\xe9s trouv\xe9s parmi (lorsqu'ils sont contenus dans) les champs de cette entr\xe9e format\xe9s tels qu'ils apparaissent \xe0 l'affichage (et ind\xe9pendamment de la casse)."))),(0,i.kt)("li",{parentName:"ul"},"La propri\xe9t\xe9 ",(0,i.kt)("inlineCode",{parentName:"li"},"model")," permet de passer les donn\xe9es JSON tout en param\xe8trant la table. Les param\xe8tres \xe9tant :",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Pr\xe9sence ou non d'un ",(0,i.kt)("inlineCode",{parentName:"li"},"select")," pour choisir le nombre d'entr\xe9es affich\xe9es par page. Sinon une valeur indiqu\xe9e dans le mod\xe8le sera prise comme valeur par d\xe9faut."),(0,i.kt)("li",{parentName:"ul"},"Pr\xe9sence ou non d'un ",(0,i.kt)("inlineCode",{parentName:"li"},"footer")," reprenant en fin de page les libell\xe9s du ",(0,i.kt)("inlineCode",{parentName:"li"},"header")," de la table."),(0,i.kt)("li",{parentName:"ul"},"Pr\xe9sence ou non d'un bouton permettant d'\xe9diter une entr\xe9e qui sera ajout\xe9e \xe0 la table.")))),(0,i.kt)("h2",{id:"le-mod\xe8le"},"Le mod\xe8le"),(0,i.kt)("p",null,"Le mod\xe8le est l'unique propri\xe9t\xe9 pass\xe9e \xe0 la DataTable. C'est un objet javascript d\xe9fini ainsi :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const dataTableModel = {\n    id: 'datable-form-create', // obligatoire\n    buttons: { type: 'new', label: 'New', title: 'Create new employee' }], // optionnel\n    entries: [5, 10, 20, 25, 30], // optionnel\n    nbEntries: 20, // obligatoire en cas d'absence de entries, sinon ignor\xe9\n    bottomHeaders: true, // optionnel, false par d\xe9faut\n    sortCol: 0, // optionnel\n    headers: [ // obligatoire\n        {\n            title: 'First name',\n\n         ....\n        },\n        {\n\n\n\n        }\n         ...\n    ],\n    data: data  // obligatoire\n}\n")),(0,i.kt)("p",null,"Les diff\xe9rents champs du mod\xe8le sont :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"id"),": ",(0,i.kt)("em",{parentName:"li"},"obligatoire"),". Un identifiant unique sur la page pour identifier la table."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"buttons")," : ",(0,i.kt)("em",{parentName:"li"},"optionnel"),". Un tableau indiquant la pr\xe9sence de boutons ayant chacun un certain r\xf4le : cr\xe9ation d'une nouvelle entr\xe9e, \xe9dition ou suppression d'une entr\xe9e s\xe9lectionn\xe9e. Ces deux derni\xe8res fonctionnalit\xe9s n'\xe9tant pas encore impl\xe9ment\xe9es. Seul un bouton de type ",(0,i.kt)("inlineCode",{parentName:"li"},"new")," est actuellement accept\xe9, avec un champ ",(0,i.kt)("inlineCode",{parentName:"li"},"label")," pour label du bouton lui-m\xeame et un champ ",(0,i.kt)("inlineCode",{parentName:"li"},"title")," comme titre de la ",(0,i.kt)("inlineCode",{parentName:"li"},"Modal")," qui s'ouvre pour pouvoir \xe9diter une nouvelle entr\xe9e. Ce champ est optionnel ou le tableau peut \xeatre vide."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"entries")," : ",(0,i.kt)("em",{parentName:"li"},"optionnel"),". Un ",(0,i.kt)("em",{parentName:"li"},"Select")," permettant de choisir le nombre d'entr\xe9es \xe0 afficher par page."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"nbEntries")," : ",(0,i.kt)("em",{parentName:"li"},"obligatoire")," en cas d'absence du champ ",(0,i.kt)("inlineCode",{parentName:"li"},"entries"),". Sinon ignor\xe9. Le nombre d'entr\xe9es \xe0 afficher par page (par d\xe9faut)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"footer")," : ",(0,i.kt)("em",{parentName:"li"},"optionnel"),". Si ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," : reprise du header de la table en bas de page en tant que footer. Si ",(0,i.kt)("inlineCode",{parentName:"li"},"false")," ou absent le footer n'est pas affich\xe9."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"sortCol")," : ",(0,i.kt)("em",{parentName:"li"},"optionnel"),". Index de la colonne (0: 1\xe8re colonne) devant \xeatre ordonn\xe9e au chargement de la page."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"headers")," : ",(0,i.kt)("em",{parentName:"li"},"obligatoire"),". Array ordonn\xe9 des ent\xeates des colonnes de la table."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"data")," : ",(0,i.kt)("em",{parentName:"li"},"obligatoire"),". Les donn\xe9es JSON associ\xe9es \xe0 la table.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Remarque"),": Les champs non obligatoires peuvent \xeatre absents (ou masqu\xe9s comme commentaires) ou leur valeur peut-\xeatre pass\xe9e \xe0 ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," ou ",(0,i.kt)("inlineCode",{parentName:"p"},"null")),(0,i.kt)("h3",{id:"le-champ-headers"},"Le champ ",(0,i.kt)("inlineCode",{parentName:"h3"},"headers")),(0,i.kt)("p",null,"Chaque ",(0,i.kt)("inlineCode",{parentName:"p"},"header")," du tableau ",(0,i.kt)("inlineCode",{parentName:"p"},"headers")," est un objet contenant les champs suivants :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"title"),": ",(0,i.kt)("em",{parentName:"li"},"obligatoire"),". Le label du header."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"field")," : ",(0,i.kt)("em",{parentName:"li"},"obligatoire"),". Le nom du champ(cl\xe9) dans les datas JSON associ\xe9es \xe0 la table correspondant \xe0 la colonne concern\xe9e."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type")," : ",(0,i.kt)("em",{parentName:"li"},"obligatoire"),". (Peut \xeatre omis lorsque ",(0,i.kt)("inlineCode",{parentName:"li"},"input: 'Select'"),") Le type de la valeur dans les datas JSON associ\xe9es \xe0 la table correspondant \xe0 la colonne concern\xe9e.",(0,i.kt)("br",null),"Les types pris en charge sont actuellement :",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"'string'")," : Une cha\xeene de caract\xe8res."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"'date'")," : Une cha\xeene de caract\xe8res valide repr\xe9sentant une date au format ",(0,i.kt)("em",{parentName:"li"},"jj/mm/aaaa"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"'number'")," : Tout nombre javascript valide."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"input")," : ce champ indique le type de composant \xe0 utiliser dans la modale de cr\xe9ation (ou \xe9dition) d'une ligne de la table.",(0,i.kt)("br",null),"Les\nvaleurs de ",(0,i.kt)("inlineCode",{parentName:"li"},"input")," peuvent \xeatre :",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"text")," : qui g\xe9n\xe9rera la cr\xe9ation d'un ",(0,i.kt)("inlineCode",{parentName:"li"},"<input type='text'>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"date")," : qui g\xe9n\xe9rera la cr\xe9ation d'un ",(0,i.kt)("inlineCode",{parentName:"li"},"<input type='date'>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"number")," : qui g\xe9n\xe9rera la cr\xe9ation d'un ",(0,i.kt)("inlineCode",{parentName:"li"},"<input type='number'>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Select")," : qui g\xe9n\xe9rera la cr\xe9ation d'un ",(0,i.kt)("inlineCode",{parentName:"li"},"<Select/>"),(0,i.kt)("br",null),"\nDans ce dernier cas, en plus des champs ",(0,i.kt)("inlineCode",{parentName:"li"},"title"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"field"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"input: 'Select'"),", on passera les champs : ",(0,i.kt)("inlineCode",{parentName:"li"},"options"),", et ",(0,i.kt)("inlineCode",{parentName:"li"},"selected"),". Se reporter \xe0 la documentation du composant ",(0,i.kt)("inlineCode",{parentName:"li"},"Select")," pour la signification de ces champs. Le champ ",(0,i.kt)("inlineCode",{parentName:"li"},"type")," est omis."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fieldset")," : qui g\xe9n\xe9rera la cr\xe9ation d'un ",(0,i.kt)("inlineCode",{parentName:"li"},"<fieldset>"))))),(0,i.kt)("h3",{id:"le-champ-data"},"Le champ ",(0,i.kt)("inlineCode",{parentName:"h3"},"data")),(0,i.kt)("p",null,"C'est un ",(0,i.kt)("inlineCode",{parentName:"p"},"Array")," dont chaque \xe9l\xe9ment est un objet correspondant aux donn\xe9es d'une ligne de la table. Chacun de ses \xe9l\xe9ments a une propri\xe9t\xe9 qui correspond au champ ",(0,i.kt)("inlineCode",{parentName:"p"},"field")," des objets \xe9l\xe9ments du tableau ",(0,i.kt)("inlineCode",{parentName:"p"},"headers"),"."))}m.isMDXComponent=!0}}]);